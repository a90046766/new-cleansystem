import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useEffect, useState } from 'react';
import { customerRepo } from '../../adapters/local/customers';
export default function CustomersPage() {
    const [rows, setRows] = useState([]);
    const [edit, setEdit] = useState(null);
    const load = async () => setRows(await customerRepo.list());
    useEffect(() => { load(); }, []);
    return (_jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx("div", { className: "text-lg font-semibold", children: "\u5BA2\u6236\u7BA1\u7406" }), _jsx("button", { onClick: () => setEdit({ name: '', phone: '', email: '', addresses: [], blacklisted: false }), className: "rounded-lg bg-brand-500 px-3 py-1 text-white", children: "\u65B0\u589E" })] }), rows.map(c => (_jsx("div", { className: "rounded-xl border bg-white p-4 shadow-card", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsxs("div", { className: `font-semibold ${c.blacklisted ? 'text-rose-600' : ''}`, children: [c.name, c.blacklisted && _jsx("span", { className: "ml-2 rounded bg-rose-100 px-1.5 text-xs text-rose-700", children: "\u9ED1\u540D\u55AE" })] }), _jsxs("div", { className: "text-sm text-gray-600", children: [c.phone, " \u00B7 ", c.email] }), c.addresses?.length > 0 && _jsx("div", { className: "text-xs text-gray-500", children: c.addresses.map((a) => a.address).join(' / ') })] }), _jsxs("div", { className: "flex items-center gap-2", children: [_jsx("button", { onClick: () => setEdit(c), className: "rounded-lg bg-gray-900 px-3 py-1 text-white", children: "\u7DE8\u8F2F" }), _jsx("button", { onClick: () => { const last6 = String(c.phone || '').replace(/\D/g, '').slice(-6); alert(`已重設為手機後六碼：${last6 || '（無手機）'}（示意）`); }, className: "rounded-lg bg-gray-100 px-3 py-1 text-sm", children: "\u91CD\u8A2D\u5BC6\u78BC" }), _jsx("button", { onClick: async () => { const { confirmTwice } = await import('../kit'); if (await confirmTwice('確認刪除該客戶？', '刪除後無法復原，仍要刪除？')) {
                                        await customerRepo.remove(c.id);
                                        load();
                                    } }, className: "rounded-lg bg-rose-500 px-3 py-1 text-white", children: "\u522A\u9664" })] })] }) }, c.id))), rows.length === 0 && _jsx("div", { className: "text-gray-500", children: "\u5C1A\u7121\u5BA2\u6236\u8CC7\u6599" }), edit && (_jsx("div", { className: "fixed inset-0 z-50 grid place-items-center bg-black/30 p-4", children: _jsxs("div", { className: "w-full max-w-md rounded-2xl bg-white p-4 shadow-card", children: [_jsxs("div", { className: "mb-2 text-lg font-semibold", children: [edit.id ? '編輯' : '新增', "\u5BA2\u6236"] }), _jsxs("div", { className: "space-y-2 text-sm", children: [_jsx("input", { className: "w-full rounded border px-2 py-1", placeholder: "\u59D3\u540D", value: edit.name, onChange: e => setEdit({ ...edit, name: e.target.value }) }), _jsx("input", { className: "w-full rounded border px-2 py-1", placeholder: "\u624B\u6A5F", value: edit.phone || '', onChange: e => setEdit({ ...edit, phone: e.target.value }) }), _jsx("input", { className: "w-full rounded border px-2 py-1", placeholder: "Email", value: edit.email || '', onChange: e => setEdit({ ...edit, email: e.target.value }) }), _jsxs("div", { className: "flex items-center gap-2", children: [_jsx("input", { type: "checkbox", checked: !!edit.blacklisted, onChange: e => setEdit({ ...edit, blacklisted: e.target.checked }) }), _jsx("span", { children: "\u9ED1\u540D\u55AE" })] }), _jsxs("div", { children: [_jsx("div", { className: "mb-1 font-semibold", children: "\u5730\u5740" }), (edit.addresses || []).map((a, idx) => (_jsxs("div", { className: "mb-1 flex gap-2", children: [_jsx("input", { className: "flex-1 rounded border px-2 py-1", value: a.address, onChange: e => { const arr = [...edit.addresses]; arr[idx] = { ...arr[idx], address: e.target.value }; setEdit({ ...edit, addresses: arr }); } }), _jsx("button", { onClick: () => { const arr = [...edit.addresses]; arr.splice(idx, 1); setEdit({ ...edit, addresses: arr }); }, className: "rounded bg-gray-100 px-2", children: "\u522A" })] }, idx))), _jsx("button", { onClick: () => setEdit({ ...edit, addresses: [...(edit.addresses || []), { id: `ADDR-${Math.random().toString(36).slice(2, 8)}`, address: '' }] }), className: "rounded bg-gray-100 px-2 py-1 text-xs", children: "\u65B0\u589E\u5730\u5740" })] })] }), _jsxs("div", { className: "mt-3 flex justify-end gap-2", children: [_jsx("button", { onClick: () => setEdit(null), className: "rounded-lg bg-gray-100 px-3 py-1", children: "\u53D6\u6D88" }), _jsx("button", { onClick: async () => { await customerRepo.upsert(edit); setEdit(null); load(); }, className: "rounded-lg bg-brand-500 px-3 py-1 text-white", children: "\u5132\u5B58" })] })] }) }))] }));
}
